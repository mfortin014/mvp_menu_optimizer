name: CI

on:
  pull_request:
    branches: [codex-phase1, main]
  push:
    branches: [codex-phase1]
  workflow_dispatch:

jobs:
  check:
    name: Lint & Unit Tests
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Ruff / Black / Isort (check only)
        run: |
          ruff check .
          black --check .
          isort --check-only .

      - name: Unit tests
        run: pytest tests/unit -q

  smoke:
    name: Thin Smoke (staging)
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    needs: [check]
    # Use the staging environment so we can read its env secrets/vars
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      # ---- Derive non-secret URL pieces & synthesize DATABASE_URL (no logging) ----
      - name: Derive SUPABASE_URL and DB_USER + synthesize DATABASE_URL
        shell: bash
        env:
          # Prefer environment VARIABLES (vars.*); fall back to SECRETS if not set
          SUPABASE_PROJECT_ID: ${{ vars.SUPABASE_PROJECT_ID || secrets.SUPABASE_PROJECT_ID }}
          DB_HOST: ${{ vars.DB_HOST || secrets.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT || secrets.DB_PORT }}
          DB_NAME: ${{ vars.DB_NAME || secrets.DB_NAME }}
          # Secrets
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          : "${DB_NAME:=postgres}"
          : "${DB_PORT:=5432}"
          # Derive non-secrets on runner (not stored)
          export DB_USER="${DB_NAME}.${SUPABASE_PROJECT_ID}"
          {
            echo "SUPABASE_URL=https://${SUPABASE_PROJECT_ID}.supabase.co"
          } >> "$GITHUB_ENV"

          # Build DATABASE_URL (percent-encode + sslmode=require) without echoing value
          scripts/synthesize_db_url.sh

      # ---- Smoke tests that rely on env (DATABASE_URL, SUPABASE_URL, etc.) ----
      - name: Smoke tests
        run: pytest tests/smoke -q
