name: "Auto-approve & merge consume PRs"

on:
  pull_request_target:
    types: [opened, reopened, synchronize, ready_for_review, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto_merge_consume:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository && startsWith(github.event.pull_request.head.ref, 'automation/consume/') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Preflight: only act on github-actions PRs"
        if: ${{ github.event.pull_request.user.login == 'github-actions[bot]' }}
        run: echo "Author ok"

      - name: "Fetch changed files"
        id: files
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const {owner, repo} = context.repo;
            const number = context.payload.pull_request.number;
            const files = await github.paginate(
              github.rest.pulls.listFiles, { owner, repo, pull_number: number, per_page: 100 }
            );
            core.setOutput('count', String(files.length));
            core.setOutput('paths', JSON.stringify(files.map(f => f.filename)));

      - name: "Validate paths are restricted to .github/project-seeds/**"
        uses: actions/github-script@v7
        env:
          CHANGED_PATHS_JSON: ${{ steps.files.outputs.paths }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const paths = JSON.parse(process.env.CHANGED_PATHS_JSON || '[]');
            const ok = paths.every(p => p.startsWith('.github/project-seeds/'));
            if (!ok) {
              core.setFailed('Refusing to auto-merge: files outside .github/project-seeds/ detected: ' + paths.join(', '));
            } else {
              core.notice(`All files confined to .github/project-seeds/ (${paths.length} files).`);
            }

      - name: "Approve PR"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE',
              body: 'Automated approval for consume PR (files restricted to .github/project-seeds/).'
            });

      - name: "Try squash-merge"
        id: merge
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const number = context.payload.pull_request.number;
            const res = await github.rest.pulls.merge({
              owner, repo, pull_number: number, merge_method: 'squash',
              commit_title: `chore(automation): consume seeds â†’ applied/ (#${number})`
            });
            core.setOutput('merged', String(!!res.data.merged));

      - name: "Cleanup branch on success"
        if: ${{ steps.merge.outputs.merged == 'true' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const ref = 'heads/' + context.payload.pull_request.head.ref;
            await github.rest.git.deleteRef({ owner, repo, ref });
            core.notice('Merged and deleted consume branch: ' + ref);

      - name: "If merge blocked, label + comment"
        if: ${{ steps.merge.outputs.merged != 'true' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const number = context.payload.pull_request.number;
            try {
              await github.rest.issues.addLabels({ owner, repo, issue_number: number, labels: ['manual-merge-required'] });
            } catch {}
            await github.rest.issues.createComment({
              owner, repo, issue_number: number,
              body: [
                'Auto-merge could not proceed (branch protection or repo setting).',
                'If desired, allow Actions to approve/merge PRs or merge this PR manually.',
                'This PR only alters `.github/project-seeds/**` and is generated by the seeder.'
              ].join('\n')
            });
